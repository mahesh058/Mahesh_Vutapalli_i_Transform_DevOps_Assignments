Objective:- Assignments will help trainees to understand the basics of unix command and how to explore and use it.

DO NOT copy paste commands from internet, you can take help of the Unix in-built command manual.

Be Honest to yourself!

Important command and option to learn unix commands:-
man Command
Example:-
man ls

--help Option
Example:-
ls --help

NOTE:- Always use "man" command before using any unix commands and read about it and its options and how to use it.

Assignments:-

1)List the contents of a directory and their attributes
Ans:we use command 'ls'

2)Long list the content with file, directory ownership, permissions,sizes, etc…
Ans:we use 'ls -l'

3)Display the size of the file in human readable format
Ans: we use "ls -lh"

4)Show all files and folders including hidden one 
Ans: we use "ls -al"

5)list directories recursively
Ans: we use "ls -R"

6)Sort the files by size with largest at the top
Ans: we use "ls -S"

7)Sort the files by last time modified displaying the newest first.
Ans: we use "ls --sort-t" or "ls -t"

8)Diplay the location of a program/command, where it is installed.
Ans: We use "whereis" command to display the location

9)Which command is used to switch directory from one to another
Ans: we use "cd" command

10)List all the environment variables set for the current shell environment
Ans: We use "env" command

11)Did you notice something in the output of "env" command?
Ans: Shows the HOST type

12)Which command is used to print the text or any variables value in the Console/Terminal?
Ans: "echo" command used to print the text or any variables in the console.

13)Print the value of the env variable "PATH" on the console
Ans: We use "echo $varname" command to print the value of particular variable.

14)Is linux a case-sensitive operating system?
Ans: Yes, linux is a case-sensitive operating system.

15)Is, "Ls" same as "ls"?
Ans: No "Ls" is not same as "ls"

16)Display your currently logged in user
Ans: echo $USER

17)how do you change the currrently logged in user to another user?
Ans: We use "su -" followed by a space and the target user's username.

18)Which command is used to leave a shell environment that you are currently logged in to?
Ans: We use "exit" command to leave the currently running shell.

19)How do you reboot the system?
Ans: We use "reboot" command to reboot the system.

20)How do you shutdown the system?
Ans: We use "reboot -p" command to shutdown the system.

21)Display all the major running processes in the system
Ans: -->opening termianl window of linux. 
     --> ssh command. 
     --> ps aux command. 
     -->top command or htop command. 

22)Understand the output of command used in above question of displaying processes, explain the meaning of each column and what data it displays?
Ans: -->in first step opening the terminal widnow of linux
     -->for login purpose we wil use the command ssh command.
     -->after login to see all the running process in linux we will use ps aux command.
     -->alternativley we will use top command or htop command for display the running process.

23)Display the name of the system kernel
Ans: By using command "uname -s" we get name of the system kernel.
     $uname -s -->Linux

24)display the kernel release number
Ans: By using command "uname -r" we get kernel release number.
	unam -r --> 4.4.0-19041-Microsoft

25)display the machine type of the current kernel
Ans: By using command "uname -m" we get machine type.
	uname -m --> x86_64

26)Display the name of the operating system that the kernel is running on
Ans:By using command "uname -o" we get name of the operating system.
	uname -o -->GNU/Linux

27)Display all info that uname command can show.
Ans: "uname" command prints the System kernal name which is same info of command "uname -s".
	uname --> Linux

28)Display the name of directory that you are currently pointing to
Ans: use the command 'pwd' which shows the directory name.

29)change the current directory to another directory that you have in your system.
ans:cd 
30)Go up one directory
Ans: use the command "cd .."

31)Return to last directory
Ans:use the command "cd -"

32)change the current directory to home(logged in user's) directory
Ans: type the command "cd /".

34)How to check all the command used from the prompt (Command History)
Ans: use the command  "doskey /history".

35)In which file the history of commands are stored in?
Ans: i can see my history in  bash_history in your home folder.
 
36)How many lines of history does the system keep and from where you can change it?
Ans: it can show upto 500 lines or commands, and i can change by pressing these command "history -d <line number>".

37)How can you modify bash's history behaviour
Ans: i can modify by using command  "PROMPT_COMMAND".

38)Display all the commands entered so far, now, try to run a particular command from the history list without typing that command.

NOTE:- TAB key is your friend when it comes to command completion and having long file and directory names autocompleted at the bash prompt for you. JUST BE LAZY AND USE TAB KEY FOR AUTO COMPLETION ;-)

39)What are the different types of shell and where are they used and how do we use them?
Ans: -->C shell (csh)-/bin/csh.
     -->Bourne shell (sh)-/bin/sh.
     -->Korn shell (ksh)-/bin/ksh.
     -->Bourne Again shell (bash)-/bin/bash.

40)What is the difference between login shell and non-login shell?
Ans: The differenece is login shell out will be -bash or -su.
     for non login shell will be bash or ssu.
41)How do we start login shell and non-login shell?
Ans: /bin/login

42)What happens when you start a login shell (which files are read and used and Why)?
Ans: The login shells' responsibility is to start the non-login shell and to make sure that your environment variables are set so as to ensure that you can get all the default parameters needed at start-up.
Your login shell will set the PATH environment variable, TERM, the UID and GID of the terminal amongst other things.

43)What happens when you start a non-login shell (Which files are read and used and Why)?
Ans:A Non login shell is started by a program without a login. In this case, the program just passes the name of the shell executable. For example, for a Bash shell it will be simply bash.

44)What are Shell Configuration Files, why do we need it?
Ans:Shell configuration files are executed automatically when you log in and out of a shell. They initialize and configure a shell upon login and perform cleanup operations upon logout.

45)Explain the Order of file usage from the system/user's home directory when user logs in to the System.
Ans: When user logs the home directory will be  the default directory on system. On unix it looks like /home/<USERNMAE>.
 Inside that directory are several other directories: bin (which is where some built-in programs are stored), data (for miscellaneous data files),
 Users (where users’ personal directories are located), tmp (for temporary files that don’t need to be stored long-term), and so on.

46)What are Shell Variables, list major shell variables and what do they represent?
Ans: A shell variable is a variable that is available only to the current shell. In contrast, an environment variable is available system wide and can be used by other applications on the system.
1.PATH 2.HOME 3.USER 4.UID 5.EDITOR 6.TERM 7.SHELL

47)How we see all our env variables?
Ans: "printenv" command prints all the env variables.

48)How we see all env variables in alphabical order?
Ans:"printenv -0 | sort -z | tr '\0' '\n'" prints the env variables in alphabetical order.

49)What Format does the env var and its values are stored?
Ans: env variables stored in /etc/environment.

50)How do you create your own varible?
Ans: By the below process,
	--> $ NEWVARIBALE=123
	--> #to see the NEWVARIBLE use echo $NEWVARIABLE (which prints the value.)

51)How do you start a new bash shell?
Ans: Launch a terminal from your desktop's application menu and you will see the bash shell. There are other shells, but most Linux distributions use bash by default. Press Enter after typing a command to run it. Note that you don't need to add an .exe or anything like that – programs don't have file extensions on Linux
bash -c or wsl.

52)Difference between Local/Shell variables to Global Variable
Ans:Local/shell variables are only available with in the shell script. Global variables can accessed both from with in and out of a shell script like example environmental variables.

53)Making a variable accessible from other the shell in the system.
Ans: By using 'export'.
     eg: in file a.sh			in file b.sh
		#!/bin/bash		#!/bin/bash
		NUM=10			. ./a.sh
		export NUM		echo $NUM
		

54)Show the real life use case of exporting a variable
Ans: By using 'export'.
     eg: in file a.sh			in file b.sh
		#!/bin/bash		#!/bin/bash
		NUM=10			. ./a.sh
		export NUM		echo $NUM

55)Convert the above script file into a command, The file should run with "myappp" instead of "myapp.sh"

56)What is Globbing? Explain in depth with examples?
Ans: File globbing is a feature provided by the UNIX/Linux shell to represent multiple filenames by using special characters
called wildcards with a single file name. A wildcard is essentially a symbol which may be used to substitute for one or more characters.
Therefore, we can use wildcards for generating the appropriate combination of file names as per our requirement.
The bash shell provides three characters to use as wildcards:
1.Asterisk (*) to represent 0 or more characters (eg: *.txt --> selects /access all files with .txt extension files)
2.Question mark (?) to represent exactly one character (eg: file?.txt --> serches for files/docs with a name starts with file[followed by a single letter].txt in a range of files file1.txt,file2.txt,file3.txt the command file?.txtsearches for the number) 
3.Square brackets ([]) to represent and match for the character enclosed within the square brackets.(eg: file[1-9].txt search files start with name file followed by any number and with extension .txt)

57)List all entries with extension ".sh"
Ans: Use the command "$ find . -name \*.sh -print"

58)List all entries with numbers in it.
Ans:      grep -n
59)List all entries that starts with a character and ends with a number
Ans:    grep
60)List all entries that name length more than 5 characters
Ans: use command "($grep -A[NumberOfLines(5)] [search] [file]  )"

61)What is Quoting? and Why do we need it?
 Ans:Quoting is used to remove the special meaning of certain characters or words to the shell. Quoting can be used to disable special treatment for special characters, to prevent reserved words from being recognized as such, and to prevent parameter expansion

62)Write few(minimum 3) unique examples that shows, how a particular problem is solved using Quoting.

HINT:- look for commands -> locate, find and whereis
63)How do you find a particular files/directories based on a particular search criteria?
Ans: use command "find . -name \*.sh -print"

64)Write major difference between locate, find and whereis?
Ans:Big difference is that "find" searches real files recursively down a given directory, while "locate" searches a database without requiring specific directory. Thus, if you have saved a file before updating database, find will find it , but locate won't.  "whereis" is to find a command such as you know its there somewhere but not in your path.

65)How Globbing is different from locate, find and whereis?

66)Explain the Linux File System.
Ans:Linux file system is generally a built-in layer of a Linux operating system used to handle the data management of the storage. It helps to arrange the file on the disk storage. It manages the file name, file size, creation date, and much more information about a file.

67)Explain absolute and Relative Paths
Ans:In simple words, an absolute path refers to the same location in a file system relative to the root directory, whereas a relative path points to a specific location in a file system relative to the current directory you are working on.

68)What are the different ways of creating a File in linux System? Write an example of each and the difference between them.
Ans:1.$ touch filename
2.$ cat > filename 
3.$ echo "This is the text" > filename
4.$ grep This file.txt > new_file1.txt
5.using a text editor like vi,nano,vm

69)In how many ways we can delete the files from linux system? write an example of each and then difference between them.
Ans:1)unlink filename
    2)rm filename
    3)rm *.pdf (it remove all pdf file in our system)

70)Archiving files using linux command, write a command to archive set of files from linux commands.
Ans:tar [flag] [archive-file] [file or directory to be archived])__(1.tar cvf file.tar *.txt 

71)Extract the archived files from the above step.
Ans: .tar xvf file.tar